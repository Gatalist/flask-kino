
services:
    postgres_db:
        container_name: postgres_db
        image: postgres:16
#        build: ./postgres
        restart: always
        env_file:
            - ./app/.env
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        volumes:
#            - ./postgres/backup:/home/backup
            - ./postgres/database:/var/lib/postgresql/data
            - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
        networks:
            - my_app_network

    pgadmin:
        container_name: pgadmin4
        image: dpage/pgadmin4
#        build: ./postgres
        restart: always
        env_file:
            - ./app/.env
        environment:
            PGADMIN_DEFAULT_EMAIL: 'admin@admin.com'
            PGADMIN_DEFAULT_PASSWORD: 'root'
        ports:
            - "5050:80"
        networks:
            - my_app_network
#        volumes:
#            - ./postgres/backup:/home/backup
#            - ./postgres/backup:/var/lib/pgadmin/storage/admin_admin.com

    flask:
        container_name: flask_app
        build: ./app
#        command: gunicorn --bind 0.0.0.0:5000 run:app
        command: python run.py
        restart: always
        ports:
            - "5000:5000"
        depends_on:
            - postgres_db
        volumes:
            - ./app:/home/app
            - ./postgres/backup:/home/backup
        networks:
            - my_app_network

    nginx:
        build: ./nginx
        ports:
            - "1337:80"
        depends_on:
            - flask
        networks:
            - my_app_network

networks:
  my_app_network:
    driver: bridge
